name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main

jobs:
  build-and-test-dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Backend Dependencies
        run: |
          cd backend
          npm install

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Backend Unit Tests
        run: |
          cd backend
          npm test

      - name: Run Frontend Unit Tests
        run: |
          cd frontend
          npm test

      - name: Merge dev into main
        if: ${{ success() }}
        uses: actions/github-script@v6
        with:
          script: |
            const sourceBranch = 'dev';
            const targetBranch = 'main';
            await github.rest.repos.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: targetBranch,
              head: sourceBranch,
            });

  build-test-deploy-main:
    needs: build-and-test-dev
    if: github.ref == 'refs/heads/dev' && success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Fetch the main branch
        run: |
          git fetch origin main
          git checkout main

      - name: Run Backend Unit Tests
        run: |
          cd backend
          npm install
          npm test

      - name: Run Frontend Unit Tests
        run: |
          cd frontend
          npm install
          npm test

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version # Verify installation

      - name: Build Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend

      - name: Build Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install E2E Test Dependencies
        run: |
          cd e2e-tests
          npm install

      - name: Start Docker Containers
        run: |
          # Start the containers so the tests can connect to them
          docker-compose up -d  # Run in detached mode (background)

      - name: Run E2E Tests
        run: |
          cd e2e-tests
          npx mocha test.js

      - name: Push Docker Images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

